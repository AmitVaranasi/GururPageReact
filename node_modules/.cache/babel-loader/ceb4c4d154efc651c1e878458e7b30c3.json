{"ast":null,"code":"var _jsxFileName = \"/home/amit/react/GururPageReact/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay';\nimport Checkbox from './components/Checkbox';\nimport Formcheck from './components/Formcheck';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [{\n        key: \"domain\",\n        baseurl: \"http://guru.southindia.cloudapp.azure.com:8051/knowlake/\",\n        path: \"/list_domains?q=\"\n      }],\n      rows: [],\n      inputfield: '',\n      inputdisable: false,\n      domain: '',\n      baseurl: 'http://guru.southindia.cloudapp.azure.com:8051/knowlake/',\n      path: '/list_domains?q=',\n      schema: {},\n      state: true,\n      url: \"http://guru.southindia.cloudapp.azure.com:8051/knowlake/agriculture/agriculture.models.entities.crop.Crop/5cee1953b116556c730c7667/details/\",\n      formdisplay: \"none\",\n      formcheck: false,\n      ischecked: true\n    };\n    this.apicall = this.apicall.bind(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n    this.apicall(\"\");\n  }\n\n  async triggerapp(display_name, id) {\n    console.log(\"this is id length: \" + id.length);\n    await this.setState({\n      list: [...this.state.list, {\n        key: display_name,\n        baseurl: this.state.baseurl,\n        path: id\n      }],\n      rows: [],\n      path: id + '?q=',\n      domain: display_name,\n      inputfield: ''\n    });\n\n    if (this.state.list.length === 4) {\n      console.log(\"hello i am \".concat(display_name));\n      await this.setState({\n        state: false,\n        formcheck: true,\n        formdisplay: \"block\"\n      });\n    } //   if(display_name === \"Crop\"){\n    //     await  this.setState({\n    //       path:`${this.state.path}agriculture.models.entities.crop.Crop/`,\n    //       search:'list_entities/?q=',\n    //       formdisplay:\"none\"\n    //     })\n    //   }\n    //   else if(display_name === \"Agriculture\"){\n    //    await  this.setState({\n    //       path:`${display_name.toLowerCase()}/`,\n    //       search:'list_entity_types?q=',\n    //       formdisplay:\"none\"\n    //     })     \n    // }\n    //   else {\n    //     await  this.setState({\n    //       path:`agriculture/agriculture.models.entities.crop.Crop/`,\n    //       search:`${id}/details/`,\n    //       state:false,\n    //       url:this.state.baseurl+`agriculture/agriculture.models.entities.crop.Crop/`+`${id}/details/`,\n    //       formdisplay:\"block\",\n    //       formcheck:true\n    //     })  \n    //   }\n\n\n    console.log(\"this is url: \" + this.state.url);\n    this.apicall(\"\");\n  }\n\n  apicall(searchterm) {\n    const urlstring = this.state.baseurl + this.state.path + searchterm;\n    console.log(urlstring);\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        console.log(this.state.domain);\n        const results = searchResults; //console.log(searchResults)\n\n        if (this.state.state) {\n          const entities = [];\n          results.forEach(element => {\n            console.log(element);\n            const entity = React.createElement(ListDisplay, {\n              key: element.id,\n              element: element,\n              trigger: this.triggerapp,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            });\n            entities.push(entity);\n          });\n          this.setState({\n            rows: entities\n          });\n        } else {\n          this.setState({\n            schema: results\n          });\n        }\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  async handleclick(e) {\n    let search = \"\";\n\n    if (this.state.length > 2) {\n      search = \"?q=\";\n    }\n\n    if (this.state.list.length <= 4) {\n      console.log(this.state.list.length);\n      await this.setState({\n        inputfield: '',\n        rows: [],\n        path: e.path + search,\n        formcheck: false,\n        state: true\n      });\n\n      while (this.state.list[this.state.list.length - 1].key !== e.key) {\n        if (this.state.list.length > 1) {\n          const list = this.state.list.pop();\n        }\n      }\n    }\n\n    this.apicall(\"\"); // console.log(`i am ${e}`);\n    // if(this.state.list.length===2){\n    //   const list = this.state.list.pop();}\n    // while(this.state.list[this.state.list.length-1] !== e){\n    //   if(this.state.list.length>1){\n    //     const list = this.state.list.pop();\n    //   }\n    // }\n    // if(e === \"Domain\"){\n    //   this.setState({\n    //     list:this.state.list,\n    //     rows:[],\n    //     path:`list_domains/`,\n    //     search:'?q=',\n    //     domain:e,\n    //     schema:{},\n    //     state:true,\n    //     formdisplay:\"none\",\n    //     formcheck:false\n    //   },()=>this.apicall(\"\"))\n    // }else if(e === \"Agriculture\"){\n    //   this.setState({\n    //     list:this.state.list,\n    //     rows:[],\n    //     path:`${e.toLowerCase()}/`,\n    //     search:'list_entity_types?q=',\n    //     domain:e,\n    //     schema:{},\n    //     state:true,\n    //     formdisplay:\"none\",\n    //     formcheck:false\n    //   },()=>this.apicall(\"\"))\n    // }else if(e === \"Crop\"){\n    //   this.setState({\n    //     list:this.state.list,\n    //     rows:[],\n    //     path:`agriculture/`,\n    //     search:'agriculture.models.entities.crop.Crop/list_entities/?q=',\n    //     domain:e,\n    //     schema:{},\n    //     state:true,\n    //     formdisplay:\"none\",\n    //     formcheck:false\n    //   },()=>this.apicall(\"\"))\n    // }\n    // else{\n    //   console.log(\"do nothing\");\n    // }\n  }\n\n  searchChangeHandler(event) {\n    /* await this.setState(({\n      inputfield:event.target.value,\n    }))*/\n    this.setState({\n      inputfield: event.target.value\n    });\n    console.log(this.state.inputfield);\n    const searchTerm = event.target.value;\n    this.apicall(searchTerm);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"titleBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"entity ingestion\"))))), React.createElement(Checkbox, {\n      ischecked: this.state.ischecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.list.map(number => React.createElement(\"li\", {\n      key: number.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleclick(number),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, number.key)))), React.createElement(\"div\", {\n      className: \"stylingbody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        fontSize: 24,\n        display: 'block',\n        width: \"45%\",\n        paddingTop: 8,\n        paddingBottom: 8,\n        paddingLeft: 16\n      },\n      onChange: this.searchChangeHandler.bind(this),\n      value: this.state.inputfield,\n      disabled: this.state.inputdisable,\n      placeholder: \"search here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), this.state.rows), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, console.log(this.state.formcheck), React.createElement(Formcheck, {\n      state: this.state.formcheck,\n      url: this.state.baseurl + this.state.path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amit/react/GururPageReact/src/App.js"],"names":["React","Component","$","ListDisplay","Checkbox","Formcheck","App","constructor","props","state","list","key","baseurl","path","rows","inputfield","inputdisable","domain","schema","url","formdisplay","formcheck","ischecked","apicall","bind","triggerapp","handleclick","display_name","id","console","log","length","setState","searchterm","urlstring","ajax","success","searchResults","results","entities","forEach","element","entity","push","error","xhr","status","err","e","search","pop","searchChangeHandler","event","target","value","searchTerm","render","map","number","fontSize","display","width","paddingTop","paddingBottom","paddingLeft"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay'\nimport Checkbox from './components/Checkbox'\nimport Formcheck from './components/Formcheck'\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      list:[{key:\"domain\",baseurl:\"http://guru.southindia.cloudapp.azure.com:8051/knowlake/\",path:\"/list_domains?q=\"}],\n      rows:[],\n      inputfield:'',\n      inputdisable:false,\n      domain:'',\n      baseurl:'http://guru.southindia.cloudapp.azure.com:8051/knowlake/',\n      path:'/list_domains?q=',\n      schema:{},\n      state:true,\n      url:\"http://guru.southindia.cloudapp.azure.com:8051/knowlake/agriculture/agriculture.models.entities.crop.Crop/5cee1953b116556c730c7667/details/\",\n      formdisplay:\"none\",\n      formcheck:false,\n      ischecked:true,\n\n    }\n    this.apicall = this.apicall.bind(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n    this.apicall(\"\");\n  }\n   async triggerapp(display_name,id){\n     console.log(\"this is id length: \"+id.length);\n    await this.setState({\n      list:[...this.state.list,{key:display_name,baseurl:this.state.baseurl,path:id}],\n      rows:[],\n      path:id+'?q=',\n      domain:display_name,\n      inputfield:''\n    \n    })\n    if(this.state.list.length === 4){\n      console.log(`hello i am ${display_name}`)\n      await this.setState({\n        state:false,\n        formcheck:true,\n        formdisplay:\"block\"\n      })\n    }\n    \n  //   if(display_name === \"Crop\"){\n  //     await  this.setState({\n  //       path:`${this.state.path}agriculture.models.entities.crop.Crop/`,\n  //       search:'list_entities/?q=',\n  //       formdisplay:\"none\"\n  //     })\n  //   }\n  //   else if(display_name === \"Agriculture\"){\n  //    await  this.setState({\n  //       path:`${display_name.toLowerCase()}/`,\n  //       search:'list_entity_types?q=',\n  //       formdisplay:\"none\"\n  //     })     \n  // }\n  //   else {\n  //     await  this.setState({\n  //       path:`agriculture/agriculture.models.entities.crop.Crop/`,\n  //       search:`${id}/details/`,\n  //       state:false,\n  //       url:this.state.baseurl+`agriculture/agriculture.models.entities.crop.Crop/`+`${id}/details/`,\n  //       formdisplay:\"block\",\n  //       formcheck:true\n  //     })  \n  //   }\n  console.log(\"this is url: \"+this.state.url)  \n  this.apicall(\"\")\n  }\n\n  \n  apicall(searchterm){\n    \n    const urlstring = this.state.baseurl+this.state.path+searchterm;\n    console.log(urlstring)\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n        console.log(this.state.domain)\n        const results = searchResults\n        //console.log(searchResults)\n        if(this.state.state){\n        const entities = [];\n        results.forEach(element => {\n          console.log(element)\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          entities.push(entity)\n        });\n         this.setState({\n           rows:entities,\n         })}\n         else{\n           this.setState({\n             schema:results,\n           })\n         }\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  async handleclick(e){\n    let search = \"\";\n    if(this.state.length > 2){\n      search = \"?q=\";\n    }\n    if(this.state.list.length<=4){\n      console.log(this.state.list.length)\n    await this.setState({\n      inputfield:'',\n      rows:[],\n      path:e.path+search,\n      formcheck:false,\n      state:true\n    })\n    while(this.state.list[this.state.list.length-1].key !== e.key){\n         if(this.state.list.length>1){\n           const list = this.state.list.pop();\n         }\n       }\n\n    \n  }\n  this.apicall(\"\")\n    // console.log(`i am ${e}`);\n    // if(this.state.list.length===2){\n    //   const list = this.state.list.pop();}\n    // while(this.state.list[this.state.list.length-1] !== e){\n    //   if(this.state.list.length>1){\n    //     const list = this.state.list.pop();\n    //   }\n    // }\n    // if(e === \"Domain\"){\n      \n    //   this.setState({\n    //     list:this.state.list,\n    //     rows:[],\n    //     path:`list_domains/`,\n    //     search:'?q=',\n    //     domain:e,\n    //     schema:{},\n    //     state:true,\n    //     formdisplay:\"none\",\n    //     formcheck:false\n    //   },()=>this.apicall(\"\"))\n      \n    // }else if(e === \"Agriculture\"){\n    //   this.setState({\n    //     list:this.state.list,\n    //     rows:[],\n    //     path:`${e.toLowerCase()}/`,\n    //     search:'list_entity_types?q=',\n    //     domain:e,\n    //     schema:{},\n    //     state:true,\n    //     formdisplay:\"none\",\n    //     formcheck:false\n    //   },()=>this.apicall(\"\"))\n      \n    // }else if(e === \"Crop\"){\n    //   this.setState({\n    //     list:this.state.list,\n    //     rows:[],\n    //     path:`agriculture/`,\n    //     search:'agriculture.models.entities.crop.Crop/list_entities/?q=',\n    //     domain:e,\n    //     schema:{},\n    //     state:true,\n    //     formdisplay:\"none\",\n    //     formcheck:false\n    //   },()=>this.apicall(\"\"))\n    // }\n    // else{\n    //   console.log(\"do nothing\");\n    // }\n  }\n\n    searchChangeHandler(event) {\n    /* await this.setState(({\n      inputfield:event.target.value,\n    }))*/\n     this.setState({ inputfield: event.target.value });\n    \n    console.log(this.state.inputfield)\n    const searchTerm = event.target.value      \n    this.apicall(searchTerm);\n  }\n  render(){\n    return(\n      <div className=\"App\">\n      \n      <table className=\"titleBar\">\n          <tbody>\n            <tr>\n              \n              <td width=\"8\"/>\n              <td>\n                <h1>entity ingestion</h1>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <Checkbox ischecked = {this.state.ischecked}></Checkbox>\n        <ul className =\"list\">\n          {this.state.list.map(number => <li key={number.key}><button onClick ={()=> this.handleclick(number)}>{number.key}</button></li>)}\n        </ul>\n       <div className = \"stylingbody\">\n       <div className = \"body\">\n        \n        <input  style={{\n          fontSize: 24,\n          display: 'block',\n          width: \"45%\",\n          paddingTop: 8,\n          paddingBottom: 8,\n          paddingLeft: 16,\n          \n        }}onChange={this.searchChangeHandler.bind(this)} value = {this.state.inputfield} disabled = {this.state.inputdisable}  placeholder=\"search here\"/>\n        {this.state.rows}\n        </div>\n        <div className = \"form\" >\n        {console.log(this.state.formcheck)}\n          <Formcheck state = {this.state.formcheck} url = {this.state.baseurl+this.state.path}/>\n        </div>\n       </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}