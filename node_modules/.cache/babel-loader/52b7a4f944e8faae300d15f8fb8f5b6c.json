{"ast":null,"code":"var _jsxFileName = \"/home/amit/react/api-call/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\"Domain\"],\n      rows: [],\n      inputfield: '',\n      inputdisable: false,\n      domain: '',\n      baseurl: 'http://guru.southindia.cloudapp.azure.com:8001/knowlake/',\n      path: 'list_domains/',\n      search: '?q='\n    };\n    this.apicall = this.apicall.bind(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.domainapicall = this.domainapicall.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n    this.apicall(\"\");\n  }\n\n  async triggerapp(display_name) {\n    this.setState({\n      list: [...this.state.list, display_name],\n      rows: [],\n      domain: display_name\n    });\n\n    if (display_name === \"Crop\") {\n      await this.setState({\n        path: \"\".concat(this.state.path),\n        search: 'agriculture.models.entities.crop.Crop/list_entities/?q='\n      });\n    } else {\n      await this.setState({\n        path: \"\".concat(display_name.toLowerCase(), \"/\"),\n        search: 'list_entity_types?q='\n      });\n    }\n\n    this.apicall(\"\");\n  }\n\n  async domainapicall(domain, searchterm) {\n    this.setState({\n      inputdisable: false\n    });\n    console.log(this.state.rows);\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/\".concat(domain.toLowerCase(), \"/list_entity_types?q=\").concat(searchterm);\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const domains = [];\n        results.forEach(element => {\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          });\n          domains.push(entity);\n        });\n        this.setState({\n          rows: domains\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  async cropapicall(domain, searchterm) {\n    this.setState({\n      inputdisable: false,\n      inputfield: ''\n    });\n    console.log(this.state.rows);\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/agriculture/agriculture.models.entities.crop.\".concat(domain, \"/list_entities/?q=\").concat(searchterm);\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const domains = [];\n        results.forEach(element => {\n          const crop = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n          domains.push(crop);\n        });\n        this.setState({\n          rows: domains\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  apicall(searchterm) {\n    const urlstring = this.state.baseurl + this.state.path + this.state.search + searchterm;\n    console.log(urlstring);\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const entities = [];\n        results.forEach(element => {\n          console.log(element);\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          });\n          entities.push(entity);\n        });\n        this.setState({\n          rows: entities\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  handleclick(e) {\n    this.setState({\n      inputfield: ''\n    });\n    console.log(\"i am \".concat(e));\n\n    if (this.state.list.length > 1) {\n      const list = this.state.list.pop();\n    }\n\n    if (e === \"Domain\") {\n      this.setState({\n        list: this.state.list,\n        rows: [],\n        path: \"list_domains/?q\"\n      }, () => this.apicall(\"\"));\n    } else if (e === \"Agriculture\") {\n      this.setState({\n        list: this.state.list,\n        rows: [],\n        domain: e.toLowerCase()\n      });\n      this.domainapicall(e.toLowerCase(), \"\");\n    } else {\n      console.log(\"do nothing\");\n    }\n  }\n\n  searchChangeHandler(event) {\n    /* await this.setState(({\n      inputfield:event.target.value,\n    }))*/\n    this.setState({\n      inputfield: event.target.value\n    });\n    console.log(this.state.inputfield);\n    const searchTerm = event.target.value;\n\n    if (this.state.domain === \"\") {\n      console.log(\"domain is null\");\n    } else {\n      console.log(this.state.domain); //this.apicall(searchTerm);\n      //this.domainapicall(this.state.domain,searchTerm)\n\n      this.apicall(searchTerm);\n    } //this.refs.Input.value = \"\";\n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"titleBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"entity ingestion\"))))), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.list.map(number => React.createElement(\"li\", {\n      key: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleclick(number),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, number)))), React.createElement(\"input\", {\n      style: {\n        fontSize: 24,\n        display: 'block',\n        width: \"30%\",\n        paddingTop: 8,\n        paddingBottom: 8,\n        paddingLeft: 16\n      },\n      onChange: this.searchChangeHandler.bind(this),\n      value: this.state.inputfield,\n      disabled: this.state.inputdisable,\n      placeholder: \"search here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), this.state.rows);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amit/react/api-call/src/App.js"],"names":["React","Component","$","ListDisplay","App","constructor","props","state","list","rows","inputfield","inputdisable","domain","baseurl","path","search","apicall","bind","triggerapp","domainapicall","handleclick","display_name","setState","toLowerCase","searchterm","console","log","urlstring","ajax","url","success","searchResults","results","domains","forEach","element","entity","id","push","error","xhr","status","err","cropapicall","crop","entities","e","length","pop","searchChangeHandler","event","target","value","searchTerm","render","map","number","fontSize","display","width","paddingTop","paddingBottom","paddingLeft"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay'\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      list:[\"Domain\"],\n      rows:[],\n      inputfield:'',\n      inputdisable:false,\n      domain:'',\n      baseurl:'http://guru.southindia.cloudapp.azure.com:8001/knowlake/',\n      path:'list_domains/',\n      search:'?q='\n      \n\n    }\n    this.apicall = this.apicall.bind(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.domainapicall = this.domainapicall.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n    this.apicall(\"\");\n  }\n   async triggerapp(display_name){\n    this.setState({\n      list:[...this.state.list,display_name],\n      rows:[],\n      domain:display_name\n    })\n    \n    if(display_name === \"Crop\"){\n      await  this.setState({\n        path:`${this.state.path}`,\n        search:'agriculture.models.entities.crop.Crop/list_entities/?q='\n      })\n    }\n    else{\n     await  this.setState({\n        path:`${display_name.toLowerCase()}/`,\n        search:'list_entity_types?q='\n      })     \n  }\n  this.apicall(\"\")\n  }\n\n  async domainapicall(domain,searchterm){\n    this.setState({\n      inputdisable:false\n    })\n    console.log(this.state.rows);\n    const urlstring = `http://guru.southindia.cloudapp.azure.com:8001/knowlake/${domain.toLowerCase()}/list_entity_types?q=${searchterm}`;\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const domains = [];\n        results.forEach(element => {\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          domains.push(entity)\n        });\n         this.setState({\n           rows:domains,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  async cropapicall(domain,searchterm){\n    this.setState({\n      inputdisable:false,\n      inputfield:''\n    })\n    console.log(this.state.rows);\n    const urlstring = `http://guru.southindia.cloudapp.azure.com:8001/knowlake/agriculture/agriculture.models.entities.crop.${domain}/list_entities/?q=${searchterm}`;\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const domains = [];\n        results.forEach(element => {\n          const crop = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          domains.push(crop)\n        });\n         this.setState({\n           rows:domains,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  apicall(searchterm){\n    \n    const urlstring = this.state.baseurl+this.state.path+this.state.search+searchterm;\n    console.log(urlstring)\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const entities = [];\n        results.forEach(element => {\n          console.log(element)\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          entities.push(entity)\n        });\n         this.setState({\n           rows:entities,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  handleclick(e){\n    this.setState({\n      inputfield:''\n    })\n    console.log(`i am ${e}`);\n    if(this.state.list.length>1){\n      const list = this.state.list.pop();\n    }\n    if(e === \"Domain\"){\n      \n      this.setState({\n        list:this.state.list,\n        rows:[],\n        path:`list_domains/?q`,\n      },()=>this.apicall(\"\"))\n      \n    }else if(e === \"Agriculture\"){\n      this.setState({\n        list:this.state.list,\n        rows:[],\n        domain:e.toLowerCase()\n      })\n      this.domainapicall(e.toLowerCase(),\"\");\n    }\n    else{\n      console.log(\"do nothing\");\n    }\n  }\n\n    searchChangeHandler(event) {\n    /* await this.setState(({\n      inputfield:event.target.value,\n    }))*/\n     this.setState({ inputfield: event.target.value });\n    \n    console.log(this.state.inputfield)\n    const searchTerm = event.target.value\n    if(this.state.domain === \"\"){\n      console.log(\"domain is null\")\n    }\n    else{ \n      console.log(this.state.domain)\n      //this.apicall(searchTerm);\n      //this.domainapicall(this.state.domain,searchTerm)\n      this.apicall(searchTerm);\n    }\n    //this.refs.Input.value = \"\";\n    \n  }\n  render(){\n    return(\n      <div className=\"App\">\n      <table className=\"titleBar\">\n          <tbody>\n            <tr>\n              \n              <td width=\"8\"/>\n              <td>\n                <h1>entity ingestion</h1>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <ul className =\"list\">\n          {this.state.list.map(number => <li key={number}><button onClick ={()=> this.handleclick(number)}>{number}</button></li>)}\n        </ul>\n        <input  style={{\n          fontSize: 24,\n          display: 'block',\n          width: \"30%\",\n          paddingTop: 8,\n          paddingBottom: 8,\n          paddingLeft: 16\n        }}onChange={this.searchChangeHandler.bind(this)} value = {this.state.inputfield} disabled = {this.state.inputdisable}  placeholder=\"search here\"/>\n        {this.state.rows}\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}