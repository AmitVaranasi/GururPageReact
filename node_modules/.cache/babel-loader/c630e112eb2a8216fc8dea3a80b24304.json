{"ast":null,"code":"var _jsxFileName = \"/home/amit/react/api-call/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\"Domain\"],\n      rows: []\n    };\n    this.myRef = React.createRef();\n    const domain = \"\";\n    this.apicall(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.domainapicall = this.domainapicall.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n  }\n\n  triggerapp(display_name) {\n    this.setState({\n      list: [...this.state.list, display_name],\n      rows: []\n    });\n    this.domain = display_name;\n    this.domainapicall(display_name, \"\");\n  }\n\n  async domainapicall(domain, searchterm) {\n    console.log(this.state.rows);\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/\".concat(domain.toLowerCase(), \"/list_entity_types?q=\").concat(searchterm);\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const domains = [];\n        results.forEach(element => {\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          });\n          domains.push(entity);\n        });\n        this.setState({\n          rows: domains\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  apicall() {\n    const obj = this.refs.Input; //obj.value = '';\n\n    console.log(obj);\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/list_domains/\";\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const entities = [];\n        results.forEach(element => {\n          console.log(element);\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n          entities.push(entity);\n        });\n        this.setState({\n          rows: entities\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  handleclick(e) {\n    console.log(\"i am \".concat(e));\n\n    if (this.state.list.length > 1) {\n      const list = this.state.list.pop();\n    }\n\n    if (e === \"Domain\") {\n      this.setState({\n        list: this.state.list,\n        rows: []\n      });\n      this.apicall();\n    } else {\n      console.log(\"do nothing\");\n    }\n  }\n\n  searchChangeHandler(event) {\n    console.log(event.target.value);\n    const boundObject = this;\n    const searchTerm = event.target.value;\n    boundObject.domainapicall(this.domain, searchTerm);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"titleBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"entity ingestion\"))))), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.list.map(number => React.createElement(\"li\", {\n      key: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleclick(number),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, number)))), React.createElement(\"input\", {\n      ref: \"Input\",\n      style: {\n        fontSize: 24,\n        display: 'block',\n        width: \"30%\",\n        paddingTop: 8,\n        paddingBottom: 8,\n        paddingLeft: 16\n      },\n      onChange: this.searchChangeHandler.bind(this),\n      placeholder: \"search here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), this.state.rows);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amit/react/api-call/src/App.js"],"names":["React","Component","$","ListDisplay","App","constructor","props","state","list","rows","myRef","createRef","domain","apicall","triggerapp","bind","domainapicall","handleclick","display_name","setState","searchterm","console","log","urlstring","toLowerCase","ajax","url","success","searchResults","results","domains","forEach","element","entity","id","push","error","xhr","status","err","obj","refs","Input","entities","e","length","pop","searchChangeHandler","event","target","value","boundObject","searchTerm","render","map","number","fontSize","display","width","paddingTop","paddingBottom","paddingLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACzBI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,CAAC,QAAD,CADM;AAEXC,MAAAA,IAAI,EAAC;AAFM,KAAb;AAIA,SAAKC,KAAL,GAAaV,KAAK,CAACW,SAAN,EAAb;AACA,UAAMC,MAAM,GAAI,EAAhB;AACA,SAAKC,OAAL,CAAa,IAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDD,EAAAA,UAAU,CAACI,YAAD,EAAc;AACtB,SAAKC,QAAL,CAAc;AACZX,MAAAA,IAAI,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf,EAAoBU,YAApB,CADO;AAEZT,MAAAA,IAAI,EAAC;AAFO,KAAd;AAIA,SAAKG,MAAL,GAAcM,YAAd;AACA,SAAKF,aAAL,CAAmBE,YAAnB,EAAgC,EAAhC;AACD;;AACD,QAAMF,aAAN,CAAoBJ,MAApB,EAA2BQ,UAA3B,EAAsC;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWE,IAAvB;AACA,UAAMc,SAAS,qEAA8DX,MAAM,CAACY,WAAP,EAA9D,kCAA0GJ,UAA1G,CAAf;AACAlB,IAAAA,CAAC,CAACuB,IAAF,CAAO;AACLC,MAAAA,GAAG,EAACH,SADC;AAELI,MAAAA,OAAO,EAAGC,aAAD,IAAmB;AAC1BP,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAD0B,CAE1B;;AAEA,cAAMO,OAAO,GAAGD,aAAhB,CAJ0B,CAK1B;;AACA,cAAME,OAAO,GAAG,EAAhB;AACAD,QAAAA,OAAO,CAACE,OAAR,CAAgBC,OAAO,IAAI;AACzB,gBAAMC,MAAM,GAAG,oBAAC,WAAD;AAAa,YAAA,GAAG,EAAID,OAAO,CAACE,EAA5B;AAAgC,YAAA,OAAO,EAAIF,OAA3C;AAAoD,YAAA,OAAO,EAAE,KAAKlB,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;AACAgB,UAAAA,OAAO,CAACK,IAAR,CAAaF,MAAb;AACD,SAHD;AAIC,aAAKd,QAAL,CAAc;AACZV,UAAAA,IAAI,EAACqB;AADO,SAAd;AAIF,OAjBI;AAkBLM,MAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,MAAN,EAAcC,GAAd,KAAsB;AAC3BlB,QAAAA,OAAO,CAACe,KAAR,CAAc,sBAAd;AACD;AApBI,KAAP;AAsBD;;AACDvB,EAAAA,OAAO,GAAE;AACP,UAAM2B,GAAG,GAAG,KAAKC,IAAL,CAAUC,KAAtB,CADO,CAEP;;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACA,UAAMjB,SAAS,GAAG,uEAAlB;AACArB,IAAAA,CAAC,CAACuB,IAAF,CAAO;AACLC,MAAAA,GAAG,EAACH,SADC;AAELI,MAAAA,OAAO,EAAGC,aAAD,IAAmB;AAC1BP,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAD0B,CAE1B;;AAEA,cAAMO,OAAO,GAAGD,aAAhB,CAJ0B,CAK1B;;AACA,cAAMe,QAAQ,GAAG,EAAjB;AACAd,QAAAA,OAAO,CAACE,OAAR,CAAgBC,OAAO,IAAI;AACzBX,UAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AACA,gBAAMC,MAAM,GAAG,oBAAC,WAAD;AAAa,YAAA,GAAG,EAAID,OAAO,CAACE,EAA5B;AAAgC,YAAA,OAAO,EAAIF,OAA3C;AAAoD,YAAA,OAAO,EAAE,KAAKlB,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;AACA6B,UAAAA,QAAQ,CAACR,IAAT,CAAcF,MAAd;AACD,SAJD;AAKC,aAAKd,QAAL,CAAc;AACZV,UAAAA,IAAI,EAACkC;AADO,SAAd;AAIF,OAlBI;AAmBLP,MAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,MAAN,EAAcC,GAAd,KAAsB;AAC3BlB,QAAAA,OAAO,CAACe,KAAR,CAAc,sBAAd;AACD;AArBI,KAAP;AAuBD;;AACDnB,EAAAA,WAAW,CAAC2B,CAAD,EAAG;AACZvB,IAAAA,OAAO,CAACC,GAAR,gBAAoBsB,CAApB;;AACA,QAAG,KAAKrC,KAAL,CAAWC,IAAX,CAAgBqC,MAAhB,GAAuB,CAA1B,EAA4B;AAC1B,YAAMrC,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBsC,GAAhB,EAAb;AACD;;AACD,QAAGF,CAAC,KAAK,QAAT,EAAkB;AAEhB,WAAKzB,QAAL,CAAc;AACZX,QAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC,IADJ;AAEZC,QAAAA,IAAI,EAAC;AAFO,OAAd;AAIA,WAAKI,OAAL;AAED,KARD,MAQK;AACHQ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF;;AAEDyB,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzB3B,IAAAA,OAAO,CAACC,GAAR,CAAY0B,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,UAAMC,WAAW,GAAG,IAApB;AACA,UAAMC,UAAU,GAAGJ,KAAK,CAACC,MAAN,CAAaC,KAAhC;AACAC,IAAAA,WAAW,CAACnC,aAAZ,CAA0B,KAAKJ,MAA/B,EAAsCwC,UAAtC;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAI,MAAA,KAAK,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAHF,CADF,CADJ,CADA,EAYE;AAAI,MAAA,SAAS,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9C,KAAL,CAAWC,IAAX,CAAgB8C,GAAhB,CAAoBC,MAAM,IAAI;AAAI,MAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB;AAAQ,MAAA,OAAO,EAAG,MAAK,KAAKtC,WAAL,CAAiBsC,MAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDA,MAAlD,CAAjB,CAA9B,CADH,CAZF,EAeE;AAAO,MAAA,GAAG,EAAG,OAAb;AAAqB,MAAA,KAAK,EAAE;AAC1BC,QAAAA,QAAQ,EAAE,EADgB;AAE1BC,QAAAA,OAAO,EAAE,OAFiB;AAG1BC,QAAAA,KAAK,EAAE,KAHmB;AAI1BC,QAAAA,UAAU,EAAE,CAJc;AAK1BC,QAAAA,aAAa,EAAE,CALW;AAM1BC,QAAAA,WAAW,EAAE;AANa,OAA5B;AAOE,MAAA,QAAQ,EAAE,KAAKd,mBAAL,CAAyBhC,IAAzB,CAA8B,IAA9B,CAPZ;AAOkD,MAAA,WAAW,EAAC,aAP9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAuBG,KAAKR,KAAL,CAAWE,IAvBd,CADF;AA2BD;;AAlIwB;;AAqI3B,eAAeL,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay'\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      list:[\"Domain\"],\n      rows:[]\n    }\n    this.myRef = React.createRef();\n    const domain  = \"\";\n    this.apicall(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.domainapicall = this.domainapicall.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n  }\n  triggerapp(display_name){\n    this.setState({\n      list:[...this.state.list,display_name],\n      rows:[]\n    })\n    this.domain = display_name;\n    this.domainapicall(display_name,\"\")\n  }\n  async domainapicall(domain,searchterm){\n    console.log(this.state.rows);\n    const urlstring = `http://guru.southindia.cloudapp.azure.com:8001/knowlake/${domain.toLowerCase()}/list_entity_types?q=${searchterm}`;\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const domains = [];\n        results.forEach(element => {\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          domains.push(entity)\n        });\n         this.setState({\n           rows:domains,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  apicall(){\n    const obj = this.refs.Input;\n    //obj.value = '';\n    console.log(obj)\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/list_domains/\";\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const entities = [];\n        results.forEach(element => {\n          console.log(element)\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          entities.push(entity)\n        });\n         this.setState({\n           rows:entities,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  handleclick(e){\n    console.log(`i am ${e}`);\n    if(this.state.list.length>1){\n      const list = this.state.list.pop();\n    }\n    if(e === \"Domain\"){\n      \n      this.setState({\n        list:this.state.list,\n        rows:[]\n      })\n      this.apicall();\n      \n    }else{\n      console.log(\"do nothing\");\n    }\n  }\n\n  searchChangeHandler(event) {\n    console.log(event.target.value)\n    const boundObject = this\n    const searchTerm = event.target.value\n    boundObject.domainapicall(this.domain,searchTerm)\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n      <table className=\"titleBar\">\n          <tbody>\n            <tr>\n              \n              <td width=\"8\"/>\n              <td>\n                <h1>entity ingestion</h1>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <ul className =\"list\">\n          {this.state.list.map(number => <li key={number}><button onClick ={()=> this.handleclick(number)}>{number}</button></li>)}\n        </ul>\n        <input ref = 'Input' style={{\n          fontSize: 24,\n          display: 'block',\n          width: \"30%\",\n          paddingTop: 8,\n          paddingBottom: 8,\n          paddingLeft: 16\n        }}onChange={this.searchChangeHandler.bind(this)}  placeholder=\"search here\"/>\n        {this.state.rows}\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}