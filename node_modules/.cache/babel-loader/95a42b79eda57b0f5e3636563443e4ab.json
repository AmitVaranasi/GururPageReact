{"ast":null,"code":"var _jsxFileName = \"/home/amit/react/api-call/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\"Domain\"],\n      rows: [],\n      inputfield: '',\n      inputdisable: true\n    };\n\n    var _input = this;\n\n    const domain = \"\";\n    this.apicall(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.domainapicall = this.domainapicall.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n  }\n\n  triggerapp(display_name) {\n    this.setState({\n      list: [...this.state.list, display_name],\n      rows: []\n    });\n    this.domain = display_name;\n\n    if (display_name === \"Crop\") {\n      this.domainapicall(display_name, \"\");\n    } else {\n      this.domainapicall(display_name, \"\");\n    }\n  }\n\n  async domainapicall(domain, searchterm) {\n    this.setState({\n      inputdisable: false\n    });\n    console.log(this.state.rows);\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/\".concat(domain.toLowerCase(), \"/list_entity_types?q=\").concat(searchterm);\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const domains = [];\n        results.forEach(element => {\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n          domains.push(entity);\n        });\n        this.setState({\n          rows: domains\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  async cropapicall(domain, searchterm) {\n    this.setState({\n      inputdisable: false\n    });\n    console.log(this.state.rows);\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/agriculture/agriculture.models.entities.crop.Crop/list_entities/\";\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const domains = [];\n        results.forEach(element => {\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n          domains.push(entity);\n        });\n        this.setState({\n          rows: domains\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  apicall() {\n    this.setState({\n      inputfield: '',\n      inputdisable: true\n    });\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/list_domains/\";\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const entities = [];\n        results.forEach(element => {\n          console.log(element);\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          });\n          entities.push(entity);\n        });\n        this.setState({\n          rows: entities\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  handleclick(e) {\n    console.log(\"i am \".concat(e));\n\n    if (this.state.list.length > 1) {\n      const list = this.state.list.pop();\n    }\n\n    if (e === \"Domain\") {\n      this.setState({\n        list: this.state.list,\n        rows: []\n      });\n      this.apicall();\n    } else {\n      console.log(\"do nothing\");\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({\n      inputfield: event.target.value\n    });\n    console.log(event.target.value);\n    const searchTerm = event.target.value;\n\n    if (this.domain === \"\") {\n      console.log(\"domain is null\");\n    } else {\n      this.domainapicall(this.domain, searchTerm);\n    } //this.refs.Input.value = \"\";\n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"titleBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"entity ingestion\"))))), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.list.map(number => React.createElement(\"li\", {\n      key: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleclick(number),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, number)))), React.createElement(\"input\", {\n      style: {\n        fontSize: 24,\n        display: 'block',\n        width: \"30%\",\n        paddingTop: 8,\n        paddingBottom: 8,\n        paddingLeft: 16\n      },\n      onChange: this.searchChangeHandler.bind(this),\n      value: this.state.inputfield,\n      disabled: this.state.inputdisable,\n      placeholder: \"search here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), this.state.rows);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amit/react/api-call/src/App.js"],"names":["React","Component","$","ListDisplay","App","constructor","props","state","list","rows","inputfield","inputdisable","_input","domain","apicall","triggerapp","bind","domainapicall","handleclick","display_name","setState","searchterm","console","log","urlstring","toLowerCase","ajax","url","success","searchResults","results","domains","forEach","element","entity","id","push","error","xhr","status","err","cropapicall","entities","e","length","pop","searchChangeHandler","event","target","value","searchTerm","render","map","number","fontSize","display","width","paddingTop","paddingBottom","paddingLeft"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay'\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      list:[\"Domain\"],\n      rows:[],\n      inputfield:'',\n      inputdisable:true\n    }\n    var _input = this;\n    const domain  = \"\";\n    this.apicall(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.domainapicall = this.domainapicall.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n  }\n  triggerapp(display_name){\n    this.setState({\n      list:[...this.state.list,display_name],\n      rows:[]\n    })\n    this.domain = display_name;\n    if(display_name === \"Crop\"){\n      this.domainapicall(display_name,\"\")  \n    }\n    else{\n    this.domainapicall(display_name,\"\")}\n  }\n  async domainapicall(domain,searchterm){\n    this.setState({\n      inputdisable:false\n    })\n    console.log(this.state.rows);\n    const urlstring = `http://guru.southindia.cloudapp.azure.com:8001/knowlake/${domain.toLowerCase()}/list_entity_types?q=${searchterm}`;\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const domains = [];\n        results.forEach(element => {\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          domains.push(entity)\n        });\n         this.setState({\n           rows:domains,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  async cropapicall(domain,searchterm){\n    this.setState({\n      inputdisable:false\n    })\n    console.log(this.state.rows);\n    const urlstring = `http://guru.southindia.cloudapp.azure.com:8001/knowlake/agriculture/agriculture.models.entities.crop.Crop/list_entities/`;\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const domains = [];\n        results.forEach(element => {\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          domains.push(entity)\n        });\n         this.setState({\n           rows:domains,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  apicall(){\n     this.setState({\n       inputfield:'',\n       inputdisable:true\n    })\n    \n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/list_domains/\";\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const entities = [];\n        results.forEach(element => {\n          console.log(element)\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          entities.push(entity)\n        });\n         this.setState({\n           rows:entities,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  handleclick(e){\n    console.log(`i am ${e}`);\n    if(this.state.list.length>1){\n      const list = this.state.list.pop();\n    }\n    if(e === \"Domain\"){\n      \n      this.setState({\n        list:this.state.list,\n        rows:[]\n      })\n      this.apicall();\n      \n    }else{\n      console.log(\"do nothing\");\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({inputfield:event.target.value});\n    console.log(event.target.value)\n    const searchTerm = event.target.value\n    if(this.domain === \"\"){\n      console.log(\"domain is null\")\n    }\n    else{ this.domainapicall(this.domain,searchTerm)}\n    //this.refs.Input.value = \"\";\n    \n  }\n  render(){\n    return(\n      <div className=\"App\">\n      <table className=\"titleBar\">\n          <tbody>\n            <tr>\n              \n              <td width=\"8\"/>\n              <td>\n                <h1>entity ingestion</h1>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <ul className =\"list\">\n          {this.state.list.map(number => <li key={number}><button onClick ={()=> this.handleclick(number)}>{number}</button></li>)}\n        </ul>\n        <input  style={{\n          fontSize: 24,\n          display: 'block',\n          width: \"30%\",\n          paddingTop: 8,\n          paddingBottom: 8,\n          paddingLeft: 16\n        }}onChange={this.searchChangeHandler.bind(this)} value = {this.state.inputfield} disabled = {this.state.inputdisable}  placeholder=\"search here\"/>\n        {this.state.rows}\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}