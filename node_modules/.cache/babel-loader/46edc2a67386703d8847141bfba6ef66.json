{"ast":null,"code":"var _jsxFileName = \"/home/amit/react/api-call/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\"Domain\"],\n      rows: [],\n      inputfield: '',\n      inputdisable: false,\n      domain: '',\n      baseurl: 'http://guru.southindia.cloudapp.azure.com:8001/knowlake/',\n      path: 'list_domains/?q='\n    };\n    this.apicall = this.apicall.bind(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.domainapicall = this.domainapicall.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n    this.urlformation = this.urlformation.bind(this);\n    this.apicall(\"\");\n  }\n\n  async triggerapp(display_name) {\n    this.setState({\n      list: [...this.state.list, display_name],\n      rows: [],\n      domain: display_name\n    });\n    var path = this.urlformation(display_name);\n    console.log(path);\n\n    if (display_name === \"Crop\") {\n      this.cropapicall(display_name, \"\");\n    } else {\n      await this.setState({\n        path: path\n      });\n      this.apicall(\"\"); //this.domainapicall(display_name,\"\")\n    }\n  }\n\n  urlformation(display_name) {\n    var path = \"\".concat(display_name.toLowerCase(), \"/\");\n\n    if (display_name === \"Crop\") {} else {\n      var search = 'list_entity_types?q=';\n    }\n\n    var com_path = path + search;\n    console.log(com_path);\n    return com_path;\n  }\n\n  async domainapicall(domain, searchterm) {\n    this.setState({\n      inputdisable: false\n    });\n    console.log(this.state.rows);\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/\".concat(domain.toLowerCase(), \"/list_entity_types?q=\").concat(searchterm);\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const domains = [];\n        results.forEach(element => {\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          });\n          domains.push(entity);\n        });\n        this.setState({\n          rows: domains\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  async cropapicall(domain, searchterm) {\n    this.setState({\n      inputdisable: false,\n      inputfield: ''\n    });\n    console.log(this.state.rows);\n    const urlstring = \"http://guru.southindia.cloudapp.azure.com:8001/knowlake/agriculture/agriculture.models.entities.crop.Crop/list_entities/\";\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const domains = [];\n        results.forEach(element => {\n          const crop = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          });\n          domains.push(crop);\n        });\n        this.setState({\n          rows: domains\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  apicall(searchterm) {\n    this.setState({\n      inputfield: '',\n      inputdisable: false\n    });\n    const urlstring = this.state.baseurl + this.state.path + searchterm;\n    console.log(urlstring);\n    $.ajax({\n      url: urlstring,\n      success: searchResults => {\n        console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n        const results = searchResults; //console.log(searchResults)\n\n        const entities = [];\n        results.forEach(element => {\n          console.log(element);\n          const entity = React.createElement(ListDisplay, {\n            key: element.id,\n            element: element,\n            trigger: this.triggerapp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          });\n          entities.push(entity);\n        });\n        this.setState({\n          rows: entities\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  handleclick(e) {\n    this.setState({\n      inputfield: ''\n    });\n    console.log(\"i am \".concat(e));\n\n    if (this.state.list.length > 1) {\n      const list = this.state.list.pop();\n    }\n\n    if (e === \"Domain\") {\n      this.setState({\n        list: this.state.list,\n        rows: [],\n        path: \"list_domains/\",\n        search: \"?q\"\n      }, () => this.apicall(\"\"));\n    } else if (e === \"Agriculture\") {\n      this.setState({\n        list: this.state.list,\n        rows: [],\n        domain: e.toLowerCase()\n      });\n      this.domainapicall(e.toLowerCase(), \"\");\n    } else {\n      console.log(\"do nothing\");\n    }\n  }\n\n  searchChangeHandler(event) {\n    /* await this.setState(({\n      inputfield:event.target.value,\n    }))*/\n    setTimeout(this.state.inputfield = event.target.value, 50);\n    console.log(this.state.inputfield);\n    const searchTerm = event.target.value;\n\n    if (this.state.domain === \"\") {\n      console.log(\"domain is null\");\n    } else {\n      console.log(this.state.domain);\n      this.apicall(searchTerm); //this.domainapicall(this.state.domain,this.state.inputfield)\n    } //this.refs.Input.value = \"\";\n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"titleBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"entity ingestion\"))))), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.state.list.map(number => React.createElement(\"li\", {\n      key: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleclick(number),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, number)))), React.createElement(\"input\", {\n      style: {\n        fontSize: 24,\n        display: 'block',\n        width: \"30%\",\n        paddingTop: 8,\n        paddingBottom: 8,\n        paddingLeft: 16\n      },\n      onChange: this.searchChangeHandler.bind(this),\n      value: this.state.inputfield,\n      disabled: this.state.inputdisable,\n      placeholder: \"search here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), this.state.rows);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amit/react/api-call/src/App.js"],"names":["React","Component","$","ListDisplay","App","constructor","props","state","list","rows","inputfield","inputdisable","domain","baseurl","path","apicall","bind","triggerapp","domainapicall","handleclick","urlformation","display_name","setState","console","log","cropapicall","toLowerCase","search","com_path","searchterm","urlstring","ajax","url","success","searchResults","results","domains","forEach","element","entity","id","push","error","xhr","status","err","crop","entities","e","length","pop","searchChangeHandler","event","setTimeout","target","value","searchTerm","render","map","number","fontSize","display","width","paddingTop","paddingBottom","paddingLeft"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport ListDisplay from './ListDisplay'\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      list:[\"Domain\"],\n      rows:[],\n      inputfield:'',\n      inputdisable:false,\n      domain:'',\n      baseurl:'http://guru.southindia.cloudapp.azure.com:8001/knowlake/',\n      path:'list_domains/?q=',\n      \n\n    }\n    this.apicall = this.apicall.bind(this);\n    this.triggerapp = this.triggerapp.bind(this);\n    this.domainapicall = this.domainapicall.bind(this);\n    this.handleclick = this.handleclick.bind(this);\n    this.urlformation = this.urlformation.bind(this);\n    this.apicall(\"\");\n  }\n   async triggerapp(display_name){\n    this.setState({\n      list:[...this.state.list,display_name],\n      rows:[],\n      domain:display_name\n    })\n    var path = this.urlformation(display_name);\n    console.log(path);\n    if(display_name === \"Crop\"){\n      this.cropapicall(display_name,\"\")  \n    }\n    else{\n     await  this.setState({\n        path:path,\n      })\n      this.apicall(\"\")\n    //this.domainapicall(display_name,\"\")\n  }\n  }\nurlformation(display_name){\n  var path = `${display_name.toLowerCase()}/`\n  if(display_name === \"Crop\"){\n\n  }\n  else{\n    var search = 'list_entity_types?q=';\n  }\n  var com_path = path+search;\n  console.log(com_path)\n  return com_path;\n}\n  async domainapicall(domain,searchterm){\n    this.setState({\n      inputdisable:false\n    })\n    console.log(this.state.rows);\n    const urlstring = `http://guru.southindia.cloudapp.azure.com:8001/knowlake/${domain.toLowerCase()}/list_entity_types?q=${searchterm}`;\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const domains = [];\n        results.forEach(element => {\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          domains.push(entity)\n        });\n         this.setState({\n           rows:domains,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  async cropapicall(domain,searchterm){\n    this.setState({\n      inputdisable:false,\n      inputfield:''\n    })\n    console.log(this.state.rows);\n    const urlstring = `http://guru.southindia.cloudapp.azure.com:8001/knowlake/agriculture/agriculture.models.entities.crop.Crop/list_entities/`;\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const domains = [];\n        results.forEach(element => {\n          const crop = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          domains.push(crop)\n        });\n         this.setState({\n           rows:domains,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  apicall(searchterm){\n     this.setState({\n       inputfield:'',\n       inputdisable:false\n    })\n    \n    const urlstring = this.state.baseurl+this.state.path+searchterm;\n    console.log(urlstring)\n    $.ajax({\n      url:urlstring,\n      success: (searchResults) => {\n        console.log(\"Fetched data successfully\")\n        //console.log(searchResults)\n\n        const results = searchResults\n        //console.log(searchResults)\n        const entities = [];\n        results.forEach(element => {\n          console.log(element)\n          const entity = <ListDisplay key = {element.id} element = {element} trigger={this.triggerapp}/>\n          entities.push(entity)\n        });\n         this.setState({\n           rows:entities,\n         })\n        \n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\")\n      }\n    })\n  }\n  handleclick(e){\n    this.setState({\n      inputfield:''\n    })\n    console.log(`i am ${e}`);\n    if(this.state.list.length>1){\n      const list = this.state.list.pop();\n    }\n    if(e === \"Domain\"){\n      \n      this.setState({\n        list:this.state.list,\n        rows:[],\n        path:`list_domains/`,\n        search:`?q`,\n      },()=>this.apicall(\"\"))\n      \n    }else if(e === \"Agriculture\"){\n      this.setState({\n        list:this.state.list,\n        rows:[],\n        domain:e.toLowerCase()\n      })\n      this.domainapicall(e.toLowerCase(),\"\");\n    }\n    else{\n      console.log(\"do nothing\");\n    }\n  }\n\n    searchChangeHandler(event) {\n    /* await this.setState(({\n      inputfield:event.target.value,\n    }))*/\n    setTimeout((this.state.inputfield = event.target.value),50);\n    console.log(this.state.inputfield)\n    const searchTerm = event.target.value\n    if(this.state.domain === \"\"){\n      console.log(\"domain is null\")\n    }\n    else{ \n      console.log(this.state.domain)\n      this.apicall(searchTerm);\n      //this.domainapicall(this.state.domain,this.state.inputfield)\n    }\n    //this.refs.Input.value = \"\";\n    \n  }\n  render(){\n    return(\n      <div className=\"App\">\n      <table className=\"titleBar\">\n          <tbody>\n            <tr>\n              \n              <td width=\"8\"/>\n              <td>\n                <h1>entity ingestion</h1>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <ul className =\"list\">\n          {this.state.list.map(number => <li key={number}><button onClick ={()=> this.handleclick(number)}>{number}</button></li>)}\n        </ul>\n        <input  style={{\n          fontSize: 24,\n          display: 'block',\n          width: \"30%\",\n          paddingTop: 8,\n          paddingBottom: 8,\n          paddingLeft: 16\n        }}onChange={this.searchChangeHandler.bind(this)} value = {this.state.inputfield} disabled = {this.state.inputdisable}  placeholder=\"search here\"/>\n        {this.state.rows}\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}